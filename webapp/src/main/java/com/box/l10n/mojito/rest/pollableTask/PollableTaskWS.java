package com.box.l10n.mojito.rest.pollableTask;

import com.box.l10n.mojito.entity.PollableTask;
import com.box.l10n.mojito.entity.TMXliff;
import com.box.l10n.mojito.rest.asset.XliffExportBody;
import com.box.l10n.mojito.service.pollableTask.PollableTaskService;
import com.box.l10n.mojito.service.tm.TMXliffRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

/**
 * WS to get access to {@link PollableTask}s
 *
 * @author Jean
 */
@RestController
public class PollableTaskWS {

    @Autowired
    PollableTaskService pollableTaskService;

    @Autowired
    TMXliffRepository tmXliffRepository;

    /**
     * Gets a {@link PollableTask} by id.
     *
     * @param pollableTaskId
     * @return
     */
    @RequestMapping(method = RequestMethod.GET, value = "/api/pollableTasks/{pollableTaskId}")
    public PollableTask getPollableTaskById(@PathVariable Long pollableTaskId) {
        return pollableTaskService.getPollableTask(pollableTaskId);
    }

    /**
     * Returns asynchronously generated XLIFF by {@link PollableTask}
     *
     * @param pollableTaskId
     * @return an XLIFF that was generated by {@link PollableTask}
     */
    @RequestMapping(method = RequestMethod.GET, value = "/api/pollableTasks/{pollableTaskId}/xliffExport")
    public XliffExportBody getPollableTaskXliffExport(@PathVariable Long pollableTaskId) {
        PollableTask pollableTask = pollableTaskService.getPollableTask(pollableTaskId);
        TMXliff tmXliff = tmXliffRepository.findByPollableTask(pollableTask);

        XliffExportBody xliffExportBody = new XliffExportBody();
        xliffExportBody.setPollableTask(pollableTask);
        if (tmXliff != null) {
            xliffExportBody.setContent(tmXliff.getContent());
        }

        return xliffExportBody;
    }
}
