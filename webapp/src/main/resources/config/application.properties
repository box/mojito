# ----------------------------------------
# CORE PROPERTIES
# ----------------------------------------

# APP
app.name=MOJITO
app.description=${app.name} is Box Localization Platform

info.build.version=@project.version@

# LOGGING
#logging.file.path=/var/logs
#logging.file.name=mojito.log
#logging.config= # location of config file (default classpath:logback.xml for logback)
#logging.level.*=ERROR
#logging.level.org.apache.http.wire=DEBUG

logging.level.net.sf.okapi.common.pipelinedriver.PipelineDriver=ERROR
logging.level.org.hibernate.jpa.internal.metamodel.MetadataContext=OFF
logging.level.NativeCriteriaPerformance=WARN

# EMBEDDED SERVER CONFIGURATION
server.port=8080

# FLYWAY
spring.flyway.enabled=false

# JPA / ENVERS
spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.jpa.properties.org.hibernate.envers.audit_strategy=org.hibernate.envers.strategy.ValidityAuditStrategy
spring.jpa.properties.org.hibernate.envers.track_entities_changed_in_revision=true

#TODO(spring2) why is this on by default if it is showing a warning? is coming from something else we use? making
# it false break cli tests
#spring.jpa.open-in-view=false

spring.datasource.url=jdbc:hsqldb:mem:testdb;DB_CLOSE_DELAY=-1
spring.datasource.initialization-mode=embedded
spring.datasource.data=classpath:/db/hsql/data.sql
spring.datasource.hikari.maximum-pool-size=30

# MANAGEMENT

# Make LDAP health check opt-in instead of opt-out, since it is in the classpath but might not be used for authentication
management.health.ldap.enabled=false
# Enable the shutdown endpoint which is made only available on 127.0.0.1 in WebSecurityConfig#configure
management.endpoint.shutdown.enabled=true
# Disable statsd by default as it is enabled through dependencies. Make it opt-in instead of opt-out for Mojito
management.metrics.export.statsd.enabled=false

# Since Spring2 prefix is .mustache, it used to be .html. Renaming files has other side effect, so will just change
# the suffix for now, which seems to be working fine and is the simplest approach
spring.mustache.suffix:.html

# JACKSON
org.springframework.http.converter.json.indent_output=false

# Compression
server.compression.enabled=true
server.compression.mime-types=application/json,application/javascript,application/xml,text/html,text/xml,text/plain,text/css

# Email
spring.mail.host=localhost

# In spring 1/with previous version of tomcat, some special character were authorized in the path
# Eg. http://localhost:8080/api/textunits?statusFilter=ALL&usedFilter=USED&repositoryIds[]=58&localeTags%5B%5D=fr-FR&offset=0&limit=11
# used to work but it now gives 400. To re-enable this behavior, configure tomcat using following properties by whitelisting
# characters as needed. This is an example to allow "[]" but there might be more required to reproduce previous behavior
#
# GitBlameWithUsageClient.getGitBlameWithUsages relies on [] not being encoded.
# TODO(spring2) - relaxed-query-chars - should we encode client side
# keep it like this for backward compatibility for now
server.tomcat.relaxed-query-chars=[,]
#server.tomcat.relaxed-path-chars=


# Activate shutdown entry point. The security config make the entry point only accessible on 127.0.0.1
#endpoints.shutdown.enabled=true

# ----------------------------------------
# L10N PROPERTIES
# ----------------------------------------

# General config
#l10n.server.url=https://mojito-cname.global

# TODO(spring2) this will need update if/when we change the release process on github
# CLI
cli.url=https://github.com/box/mojito/releases/download/v{version}/mojito-cli-{version}-exec.jar
cli.file=mojito-cli.jar

# Quartz
l10n.org.quartz.scheduler.skipUpdateCheck=true

### for Mysql, cluster deployment
#l10n.org.quartz.jobStore.useProperties=true
#l10n.org.quartz.scheduler.instanceId=AUTO
#l10n.org.quartz.jobStore.isClustered=true
#l10n.org.quartz.threadPool.threadCount=25
#l10n.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
#l10n.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#l10n.org.quartz.jobStore.dataSource=myDS
#l10n.org.quartz.dataSource.myDS.driver=com.mysql.jdbc.Driver
#l10n.org.quartz.dataSource.myDS.URL=TO UPDATE
#l10n.org.quartz.dataSource.myDS.user=TO UPDATE
#l10n.org.quartz.dataSource.myDS.password=TO UPDATE
#l10n.org.quartz.dataSource.myDS.maxConnections=27
#l10n.org.quartz.dataSource.myDS.validationQuery=select 1


# Plural updater, can be turn off when all repositories have been updated
l10n.PluralFormUpdater=true

# ----------------------------------------
# BOX CLIENT - All the configs values are required for BoxSDK related tests

# Only need to add this if you want to use the following properties outside of tests (in production)
#l10n.boxclient.useConfigsFromProperties=true

# The API key info
#l10n.boxclient.clientId={REQUIRED_FOR_TEST}
#l10n.boxclient.clientSecret={REQUIRED_FOR_TEST}
#l10n.boxclient.publicKeyId={REQUIRED_FOR_TEST}
#l10n.boxclient.privateKey={REQUIRED_FOR_TEST}
#l10n.boxclient.privateKeyPassword={REQUIRED_FOR_TEST}

# The enterprise that has granted access to the API key
#l10n.boxclient.enterpriseId={REQUIRED_FOR_TEST}
#l10n.boxclient.appUserId={REQUIRED_FOR_TEST}
#l10n.boxclient.rootFolderId={REQUIRED_FOR_TEST}
#l10n.boxclient.dropsFolderId={REQUIRED_FOR_TEST}

# The username of the App User created for the system user
#l10n.boxclient.systemAppUsername={REQUIRED_FOR_TEST}
# ----------------------------------------

## LDAP related configurations.  Uncomment and set these values to enable LDAP authentication
#l10n.security.authenticationType=LDAP
#l10n.security.ldap.url={ACTUAL_VALUE}
#l10n.security.ldap.port={ACTUAL_VALUE}
#l10n.security.ldap.root={ACTUAL_VALUE}
#l10n.security.ldap.userSearchFilter={ACTUAL_VALUE}
#l10n.security.ldap.userSearchBase={ACTUAL_VALUE}
#l10n.security.ldap.groupSearchBase={ACTUAL_VALUE}
#l10n.security.ldap.managerDn={ACTUAL_VALUE}
#l10n.security.ldap.managerPassword={ACTUAL_VALUE}

#l10n.security.unauth-redirect-to=/login/oauth2/authorization/github

## OAuth2 - rely on spring boot configuration + extra parameters for the login page, example with github
#l10n.security.authenticationType=DATABASE,OAUTH2
#spring.security.oauth2.client.registration.github.client-id=
#spring.security.oauth2.client.registration.github.client-secret=
#spring.security.oauth2.client.registration.github.provider=github
#l10n.security.oauth2.github.ui-label-text=Github
#l10n.security.oauth2.github.common-name-attribute=name

# SLA Checker
#l10n.slaChecker.incidentCheck.cron=0 0/5 * * * ?
#l10n.slaChecker.email.to=mojito@mojito.global
#l10n.slaChecker.email.from=Mojito SLA Checker <mojito@mojito.global>

# Spring session - The table changed with newer version of spring security - keep the old table for rolling deploy and rollback
spring.session.store-type=none
spring.session.jdbc.table-name=SPRING_SESSION_V2

# Slack client
#l10n.slack.token=xxx-yyy-zzz

# Phabricator client
#l10n.phabricator.token=api-xyz
#l10n.phabricator.url=https://phabricator.xyz.com

# Smartling client
#l10n.smartling.clientID=userId
#l10n.smartling.clientSecret=userSecret

# Notification for branch activity
#l10n.branchNotification.slack.enabled=true
#l10n.branchNotification.slack.userEmailPattern={0}@test.com
#l10n.branchNotification.phabricator.enabled=true
#l10n.branchNotification.phabricator.reviewer=PHID-PROJ-xyz
#l10n.branchNotification.phabricator.blockingReview=true

# Link configuration, to generate links, etc
#l10n.link.{repository}.location.url=https://opengrok.someplace.com/xref/${openGrokRepository}
#l10n.link.{repository}.location.extractedPrefix=/some/extractor/prefix/
#l10n.link.{repository}.location.label=${openGrokRepository}
#l10n.link.{repository}.location.useUsage=True
#l10n.link.{repository}.pullRequest.url=https://secure.phabricator.com/${branchName}


#l10n.link.{repository}.commit.url=http://github.com/${gitHubRepository}
#l10n.link.{repository}.commit.label=${gitHubRepository}

#l10n.link.{repository}.thirdParty.url=http://sometool.com/?
#l10n.link.{repository}.thirdParty.label=See in Some Tool

#l10n.link.{repository}.customMd5.template=${assetPath}__${textUnitName}__${targetLocale}
#l10n.link.{repository}.customMd5.label=optional, override default label: ${customMd5}
#l10n.link.{repository}.customMd5.url=optional, https://someotherplace.com/xref/${customMd5}

#l10n.link.{repository2}.location.url=https://someotherplace.com/xref/${textUnitName}
#l10n.link.{repository2}.location.label=${textUnitName}
#l10n.link.{repository2}.location.useUsage=False

# Google Analytics
#l10n.googleAnalytics.enabled=true
#l10n.googleAnalytics.hashUserId=false
#l10n.googleAnalytics.trackingId=UA-?????


## Configuration for Blob storage

# database configuration
#l10n.blob-storage.database.min1-day-ttl=1

# S3 implementation
#l10n.aws.s3.enabled=true
#l10n.aws.s3.access-key-id=
#l10n.aws.s3.access-key-secret=
#l10n.aws.s3.region=us-east-2

#l10n.blob-storage.type=s3
#l10n.blob-storage.s3.bucket=mojito
#l10n.blob-storage.s3.prefix=mojito


